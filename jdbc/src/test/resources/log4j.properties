#可以设置级别：debug>info>error
#debug：显示debug、info、error
#info：显示info、error
#error：只error
#注意的地方database 对应 log4j.appender.database.URL的database 若认log4j.rootLogger=debug,info,db 那么 log4j.appender.database.URL的database 要改成db
log4j.rootLogger=debug,info,error,console
#debug,info,error,console
#,database
#log4j.rootLogger=debug,console,info,warn,error,fatal

#每天更换文件名时的命名规则
log4j.appender.CASE.DatePattern='.'yyyy-MM-dd
log4j.appender.CASE.layout=org.apache.log4j.PatternLayout
#信息输出格式
log4j.appender.CASE.layout.ConversionPattern=[%-5p] %L-%d{yyyy-MM-dd HH:mm:ss,SSS} method:%l - %m%n

#log4j.appender.file.DatePattern=yyyy-MM-dd'.txt'

########################
# console
########################
log4j.appender.console=org.apache.log4j.ConsoleAppender 
log4j.appender.console.layout=org.apache.log4j.PatternLayout 
log4j.appender.console.layout.ConversionPattern=%d [%-5p]  (%F.%M:%L) - %m%n

########################
# debug
########################
log4j.logger.debug=debug
log4j.appender.debug=com.zl.core.log.LogAppender
log4j.appender.debug.File=log/ftpserver/ftpserver_debug
log4j.appender.debug.DatePattern='.'yyyyMMdd'.log'
log4j.appender.debug.layout=org.apache.log4j.PatternLayout 
log4j.appender.debug.layout.ConversionPattern=%d [%-5p]  (%F.%M:%L) - %m%n
log4j.appender.debug.apche.dbutils.test.query.filter.F1=org.apache.log4j.varia.LevelRangeFilter
log4j.appender.debug.apche.dbutils.test.query.filter.F1.LevelMin=debug
log4j.appender.debug.apche.dbutils.test.query.filter.F1.LevelMax=debug
log4j.appender.debug.append=true
log4j.appender.debug.Threshold = DEBUG

########################
# info
########################
log4j.logger.info=info
log4j.appender.info=com.zl.core.log.LogAppender
log4j.appender.info.File=log/ftpserver/ftpserver_info
log4j.appender.info.DatePattern='.'yyyy-MM-dd'.log'
log4j.appender.info.layout=org.apache.log4j.PatternLayout 
log4j.appender.info.layout.ConversionPattern=%d [%-5p]  (%F.%M:%L) - %m%n
log4j.appender.info.apche.dbutils.test.query.filter.F1=org.apache.log4j.varia.LevelRangeFilter
log4j.appender.info.apche.dbutils.test.query.filter.F1.LevelMin=info
log4j.appender.info.apche.dbutils.test.query.filter.F1.LevelMax=info
log4j.appender.info.append=true
log4j.appender.info.Threshold = INFO

########################
# error
########################
log4j.logger.error=error
log4j.appender.error=com.zl.core.log.LogAppender
log4j.appender.error.File=log/ftpserver/ftpserver_error
log4j.appender.error.DatePattern='.'yyyyMMdd'.log'
log4j.appender.error.layout=org.apache.log4j.PatternLayout 
log4j.appender.error.layout.ConversionPattern=%d [%-5p]  (%F.%M:%L) - %m%n
log4j.appender.error.apche.dbutils.test.query.filter.F1=org.apache.log4j.varia.LevelRangeFilter
log4j.appender.error.apche.dbutils.test.query.filter.F1.LevelMin=error
log4j.appender.error.apche.dbutils.test.query.filter.F1.LevelMax=error
log4j.appender.error.append=true
log4j.appender.error.Threshold = ERROR


########################

# orcl Appender - oracle

#######################
#log4j.logger.business=INFO,db
#log4j.appender.db=com.neam.commons.MyJDBCAppender
#log4j.appender.database=org.apache.log4j.orcl.JDBCAppender
log4j.appender.database=com.zl.core.log.JDBCAppender_getConnection
#下面是配置将日志信息插入数据库，
#配置输出目标为数据库（假如要将日志在控制台输出，配置为log4j.appender. stdout =org.apache.log4j.ConsoleAppender；将日志写入文件，配置为log4j.appender.logfile=org.apache.log4j.DailyRollingFileAppender
#这样的配置在许多地方都要有，需要可查有关资料）,当然你也可以自己扩展org.apache.log4j.orcl.JDBCAppender这个类，只需要在这里配置就可以了例如我们配置我自己扩展的MyJDBCAppender，配置为#log4j.appender.db=com.neam.commons.MyJDBCAppender
log4j.appender.database.Threshold=info
#定义什么级别的错误将写入到数据库中
log4j.appender.database.BufferSize=1
#设置缓存大小，就是当有1条日志信息是才忘数据库插一次


#log4j.appender.database.driver=oracle.orcl.driver.OracleDriver
#log4j.appender.database.URL=orcl:oracle:thin:@localhost:1521:orcl
#log4j.appender.database.user=jpa
#log4j.appender.database.password=jpa

log4j.appender.database.layout=org.apache.log4j.PatternLayout
#log4j.appender.db.sql=insert into log (LogName,UserName,Class,Mothod,createTime,LogLevel,MSG) values ('%X{userId}','%X{userName}','%C','%M','%d{yyyy-MM-dd HH:mm:ss}','%p','%m')
log4j.appender.database.sql=insert into LOG (ClassName,Mothod,createTime,LogLevel,MSG) values ('%C','%M','%d{yyyy-MM-dd HH:mm:ss}','%p','%m')



